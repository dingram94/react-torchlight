{"version":3,"file":"vite.js","sources":["../../src/plugins/vite.ts"],"sourcesContent":["import * as fs from \"fs\";\nimport * as path from \"path\";\nimport { Plugin } from \"vite\";\n\ninterface VitePluginToursOptions {\n  rootFolder?: string;\n  outputPath?: string;\n}\n\nexport function torchlightVitePlugin(\n  options: VitePluginToursOptions = {}\n): Plugin {\n  const { rootFolder = \"src\", outputPath = \"torchlight.gen.ts\" } = options;\n\n  let config: any;\n  const tourIds = new Set<string>();\n\n  return {\n    name: \"torchlight-vite-plugin\",\n    configResolved(resolvedConfig) {\n      config = resolvedConfig;\n    },\n    transform(code, id) {\n      // Only process TypeScript/TSX files\n      if (!id.endsWith(\".ts\") && !id.endsWith(\".tsx\")) {\n        return null;\n      }\n\n      // Skip the generated file itself\n      if (id.includes(\"torchlight.gen.ts\")) {\n        return null;\n      }\n\n      // Simple regex-based extraction for tour IDs\n      // This is a simplified version - the TypeScript plugin provides more robust parsing\n      const useTorchlightStepsRegex =\n        /useTorchlightSteps\\s*\\(\\s*[\"']([^\"']+)[\"']/g;\n      const defineToursRegex = /defineTours\\s*\\(\\s*\\{([^}]+)\\}/g;\n\n      let match;\n      while ((match = useTorchlightStepsRegex.exec(code)) !== null) {\n        const tourId = match[1];\n        if (tourId && tourId.trim() !== \"\" && tourId !== \"tourId\") {\n          tourIds.add(tourId);\n        }\n      }\n\n      // Extract from defineTours calls\n      while ((match = defineToursRegex.exec(code)) !== null) {\n        const tourObject = match[1];\n        const propertyRegex = /(\\w+)\\s*:/g;\n        let propMatch;\n        while ((propMatch = propertyRegex.exec(tourObject)) !== null) {\n          tourIds.add(propMatch[1]);\n        }\n      }\n\n      return null;\n    },\n    generateBundle() {\n      const sortedTourIds = Array.from(tourIds).sort();\n\n      if (sortedTourIds.length === 0) {\n        return;\n      }\n\n      const content = `\n      /* eslint-disable */\n\n      // @ts-nocheck\n\n      // noinspection JSUnusedGlobalSymbols\n      \n      // Auto-generated by torchlight-vite-plugin\n// Do not edit this file manually\n// Generated on: ${new Date().toISOString()}\n\ndeclare module \"ReactTorchlight\" {\n  interface SpotlightToursRegistry {\n${sortedTourIds.map((id) => `    \"${id}\": never;`).join(\"\\n\")}\n  }\n}\n\n// Export the tour IDs for runtime use\nexport const TOUR_IDS = {\n${sortedTourIds\n  .map(\n    (id, index) =>\n      `  ${id.replace(/[^a-zA-Z0-9_]/g, \"_\")}: \"${id}\"${\n        index < sortedTourIds.length - 1 ? \",\" : \"\"\n      }`\n  )\n  .join(\"\\n\")}\n} as const;\n\nexport type TourId = ${sortedTourIds.map((id) => `\"${id}\"`).join(\" | \")};\n`;\n\n      const outputDir = path.join(rootFolder, path.dirname(outputPath));\n      if (!fs.existsSync(outputDir)) {\n        fs.mkdirSync(outputDir, { recursive: true });\n      }\n\n      fs.writeFileSync(outputPath, content, \"utf-8\");\n      console.log(\n        `âœ… Generated torchlight types with ${\n          tourIds.size\n        } tours: ${sortedTourIds.join(\", \")}`\n      );\n    },\n  };\n}\n"],"names":["path","fs"],"mappings":"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"}