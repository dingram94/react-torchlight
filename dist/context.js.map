{"version":3,"file":"context.js","sources":["../src/context.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\n// Import generated types (will be created by the plugin)\n// The file will be generated by the TypeScript plugin when tours are defined\ndeclare global {\n  interface TorchlightToursRegistry {}\n}\n\n// Fallback types when generated file doesn't exist yet\ntype TOUR_IDS = Record<string, string>;\ntype TourId = string;\nimport {\n  TorchlightContextProps,\n  TorchlightProviderProps,\n  TorchlightStep,\n  TorchlightTour,\n} from \"./types\";\n\n// Helper type to get registered tour IDs\ntype RegisteredTourIds = keyof TorchlightToursRegistry extends never\n  ? string\n  : keyof TorchlightToursRegistry;\n\nexport const TorchlightContext =\n  createContext<TorchlightContextProps<RegisteredTourIds> | null>(null);\n\nexport const TorchlightInternalProvider: React.FC<TorchlightProviderProps> = ({\n  children,\n  overlayProps = {},\n}) => {\n  const [tours, setTours] = useState<Map<string, TorchlightTour>>(new Map());\n  const [activeTour, setActiveTour] = useState<RegisteredTourIds | null>(null);\n\n  const registerStep = useCallback(\n    (step: Omit<TorchlightStep, \"target\">, ref: React.RefObject<any>) => {\n      setTours((prev) => {\n        const newTours = new Map(prev);\n        const tour = newTours.get(step.tourId) || {\n          id: step.tourId,\n          steps: [],\n          currentStepIndex: 0,\n          isActive: false,\n        };\n\n        const existingStepIndex = tour.steps.findIndex((s) => s.id === step.id);\n        const newStep = { ...step, target: ref };\n\n        if (existingStepIndex !== -1) {\n          const existingStep = tour.steps[existingStepIndex];\n          const isIdentical =\n            existingStep.order === newStep.order &&\n            existingStep.title === newStep.title &&\n            existingStep.content === newStep.content &&\n            existingStep.placement === newStep.placement &&\n            existingStep.target === newStep.target;\n\n          if (isIdentical) {\n            return prev;\n          }\n\n          const updatedSteps = [...tour.steps];\n          updatedSteps[existingStepIndex] = newStep;\n          updatedSteps.sort((a, b) => a.order - b.order);\n\n          newTours.set(step.tourId, {\n            ...tour,\n            steps: updatedSteps,\n          });\n        } else {\n          const newSteps = [...tour.steps, newStep].sort(\n            (a, b) => a.order - b.order\n          );\n          newTours.set(step.tourId, {\n            ...tour,\n            steps: newSteps,\n          });\n        }\n\n        return newTours;\n      });\n    },\n    []\n  );\n\n  const unregisterStep = useCallback(\n    (stepId: string, tourId: RegisteredTourIds) => {\n      setTours((prev) => {\n        const newTours = new Map(prev);\n        const tour = newTours.get(tourId as string);\n\n        if (!tour) return prev;\n\n        const newSteps = tour.steps.filter((s) => s.id !== stepId);\n\n        if (newSteps.length === 0) {\n          newTours.delete(tourId as string);\n          if (activeTour === tourId) {\n            setActiveTour(null);\n          }\n        } else {\n          newTours.set(tourId as string, {\n            ...tour,\n            steps: newSteps,\n            currentStepIndex: Math.min(\n              tour.currentStepIndex,\n              newSteps.length - 1\n            ),\n          });\n        }\n\n        return newTours;\n      });\n    },\n    [activeTour]\n  );\n\n  const startTour = useCallback((tourId: RegisteredTourIds) => {\n    setTours((prev) => {\n      const newTours = new Map(prev);\n      const tour = newTours.get(tourId as string);\n\n      if (!tour) {\n        console.warn(\n          `Tour \"${String(\n            tourId\n          )}\" not found. Make sure all steps are registered.`\n        );\n        return prev;\n      }\n\n      if (tour.steps.length === 0) {\n        console.warn(\n          `Tour \"${String(\n            tourId\n          )}\" has no steps. Make sure components with steps are mounted.`\n        );\n        return prev;\n      }\n\n      newTours.set(tourId as string, {\n        ...tour,\n        isActive: true,\n        currentStepIndex: 0,\n      });\n\n      return newTours;\n    });\n\n    setActiveTour(tourId);\n  }, []);\n\n  const stopTour = useCallback(\n    (tourId: RegisteredTourIds) => {\n      setTours((prev) => {\n        const newTours = new Map(prev);\n        const tour = newTours.get(tourId as string);\n\n        if (tour) {\n          newTours.set(tourId as string, {\n            ...tour,\n            isActive: false,\n          });\n        }\n\n        return newTours;\n      });\n\n      if (activeTour === tourId) {\n        setActiveTour(null);\n      }\n    },\n    [activeTour]\n  );\n\n  const nextStep = useCallback((tourId: RegisteredTourIds) => {\n    setTours((prev) => {\n      const newTours = new Map(prev);\n      const tour = newTours.get(tourId as string);\n\n      if (!tour) return prev;\n\n      if (tour.currentStepIndex < tour.steps.length - 1) {\n        newTours.set(tourId as string, {\n          ...tour,\n          currentStepIndex: tour.currentStepIndex + 1,\n        });\n      } else {\n        newTours.set(tourId as string, {\n          ...tour,\n          isActive: false,\n        });\n        setActiveTour(null);\n      }\n\n      return newTours;\n    });\n  }, []);\n\n  const prevStep = useCallback((tourId: RegisteredTourIds) => {\n    setTours((prev) => {\n      const newTours = new Map(prev);\n      const tour = newTours.get(tourId as string);\n\n      if (tour && tour.currentStepIndex > 0) {\n        newTours.set(tourId as string, {\n          ...tour,\n          currentStepIndex: tour.currentStepIndex - 1,\n        });\n      }\n\n      return newTours;\n    });\n  }, []);\n\n  const goToStep = useCallback(\n    (tourId: RegisteredTourIds, stepIndex: number) => {\n      setTours((prev) => {\n        const newTours = new Map(prev);\n        const tour = newTours.get(tourId as string);\n\n        if (tour && stepIndex >= 0 && stepIndex < tour.steps.length) {\n          newTours.set(tourId as string, {\n            ...tour,\n            currentStepIndex: stepIndex,\n          });\n        }\n\n        return newTours;\n      });\n    },\n    []\n  );\n\n  const contextValue = useMemo(\n    () => ({\n      tours,\n      registerStep,\n      unregisterStep,\n      startTour,\n      stopTour,\n      nextStep,\n      prevStep,\n      goToStep,\n      activeTour,\n    }),\n    [\n      tours,\n      registerStep,\n      unregisterStep,\n      startTour,\n      stopTour,\n      nextStep,\n      prevStep,\n      goToStep,\n      activeTour,\n    ]\n  );\n\n  return (\n    <TorchlightContext.Provider value={contextValue}>\n      {children}\n    </TorchlightContext.Provider>\n  );\n};\n\nexport const useTorchlight = () => {\n  const context = useContext(TorchlightContext);\n\n  if (!context) {\n    throw new Error(\"useTorchlight must be used within a TorchlightProvider\");\n  }\n\n  return context;\n};\n\n// Type-safe hook that registers tours and provides IntelliSense\nexport const useTorchlightSteps = <\n  TourId extends keyof TorchlightToursRegistry,\n  T extends string\n>(\n  tourId: TourId,\n  steps: Omit<TorchlightStep<T>, \"target\" | \"tourId\">[]\n) => {\n  const { registerStep, unregisterStep } = useTorchlight();\n\n  const refsRef = useRef<Record<T, React.RefObject<any>>>(\n    {} as Record<T, React.RefObject<any>>\n  );\n\n  steps.forEach((step) => {\n    if (!refsRef.current[step.id]) {\n      refsRef.current[step.id] = { current: null };\n    }\n  });\n\n  const currentStepsRef = useRef<string>(\"\");\n  const registeredStepsRef = useRef<Set<string>>(new Set());\n\n  useEffect(() => {\n    const stepsSignature = steps\n      .map((s) => `${s.id}:${s.order}:${s.title || \"\"}:${s.placement || \"\"}`)\n      .sort()\n      .join(\"|\");\n\n    if (currentStepsRef.current !== stepsSignature) {\n      steps.forEach((step) => {\n        registerStep(\n          {\n            id: step.id,\n            tourId: tourId as string,\n            order: step.order,\n            title: step.title,\n            content: step.content,\n            placement: step.placement || \"bottom\",\n          },\n          refsRef.current[step.id]\n        );\n        registeredStepsRef.current.add(step.id);\n      });\n\n      currentStepsRef.current = stepsSignature;\n    }\n\n    return () => {\n      registeredStepsRef.current.forEach((stepId) => {\n        unregisterStep(stepId, tourId);\n      });\n      registeredStepsRef.current.clear();\n    };\n  }, [tourId, registerStep, unregisterStep, steps]);\n\n  useEffect(() => {\n    steps.forEach((step) => {\n      registerStep(\n        {\n          id: step.id,\n          tourId: tourId as string,\n          order: step.order,\n          title: step.title,\n          content: step.content,\n          placement: step.placement || \"bottom\",\n        },\n        refsRef.current[step.id]\n      );\n    });\n  }, [steps.map((s) => s.content || \"\").join(\"\"), tourId, registerStep]);\n\n  return refsRef.current;\n};\n"],"names":["createContext","useState","useCallback","useMemo","_jsx","useContext","useRef","useEffect"],"mappings":"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"}